# # -*- coding: utf-8 -*-

# # Form implementation generated from reading ui file 'untitled.ui'
# #
# # Created by: PyQt5 UI code generator 5.13.1
# #
# # WARNING! All changes made in this file will be lost!


# from PyQt5 import QtCore, QtGui, QtWidgets


# class Ui_Form(object):
#     def setupUi(self, Form):
#         Form.setObjectName("Form")
#         Form.resize(682, 624)

#         self.verticalLayout = QtWidgets.QVBoxLayout()   # 创建V1
#         self.verticalLayout.setObjectName("verticalLayout")

#         self.verticalLayout_2 = QtWidgets.QVBoxLayout(Form)  # 创建V2
#         self.verticalLayout_2.setObjectName("verticalLayout_2")



#         self.horizontalLayout = QtWidgets.QHBoxLayout()  # 创建H1
#         self.horizontalLayout.setObjectName("horizontalLayout")

#         self.horizontalLayout_2 = QtWidgets.QHBoxLayout()  # 创建H2
#         self.horizontalLayout_2.setObjectName("horizontalLayout_2")

#         self.horizontalLayout_3 = QtWidgets.QHBoxLayout()  # 创建H3
#         self.horizontalLayout_3.setObjectName("horizontalLayout_3")


#         self.radioButton = QtWidgets.QRadioButton(Form)  # 创建radio1
#         self.radioButton.setObjectName("radioButton")
#         self.radioButton_2 = QtWidgets.QRadioButton(Form)  # 创建radio2
#         self.radioButton_2.setObjectName("radioButton_2")
#         self.pushButton = QtWidgets.QPushButton(Form)  # 创建Button
#         self.pushButton.setObjectName("pushButton")
#         spaceItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
#         spaceItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
#         self.horizontalLayout_3.addItem(spaceItem1)
#         self.horizontalLayout_3.addWidget(self.pushButton)
#         self.horizontalLayout_3.addItem(spaceItem2)

#         spaceItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
#         spaceItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
#         self.horizontalLayout.addItem(spaceItem3)
#         self.horizontalLayout.addWidget(self.radioButton)
#         self.horizontalLayout.addWidget(self.radioButton_2)
#         self.horizontalLayout.addItem(spaceItem4)

#         spaceItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
#         spaceItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
#         spaceItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
#         spaceItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
         self.verticalLayout.addItem(spaceItem7)


#         self.verticalLayout.addItem(spaceItem8)
#         self.horizontalLayout_2.addLayout(self.verticalLayout)
#         self.horizontalLayout_2.addItem(spaceItem6)

#         self.verticalLayout_2.addLayout(self.horizontalLayout)
#         self.verticalLayout_2.addLayout(self.horizontalLayout_2)
#         self.verticalLayout_2.addLayout(self.horizontalLayout_3)



#         self.retranslateUi(Form)
#         QtCore.QMetaObject.connectSlotsByName(Form)

#     def retranslateUi(self, Form):
#         _translate = QtCore.QCoreApplication.translate
#         Form.setWindowTitle(_translate("Form", "Form"))
#         self.radioButton.setText(_translate("Form", "RadioButton"))
#         self.radioButton_2.setText(_translate("Form", "RadioButton"))
#         self.pushButton.setText(_translate("Form", "PushButton"))


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     Form = QtWidgets.QWidget()
#     ui = Ui_Form()
#     ui.setupUi(Form)
#     Form.show()
#     sys.exit(app.exec_())
# -*- UTF-8 -*-

from PyQt5.QtWidgets import QWidget, QApplication, QLabel, QPushButton, QMessageBox
from PyQt5.QtGui import QFont
from PyQt5.QtCore import QEvent, QRect, QPropertyAnimation, QEasingCurve, QPoint
import random
import sys

# 布局函数
class Example(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):

        # 标签布局
        self.lb = QLabel('愿意做我女朋友么？', self)
        self.lb.setFont(QFont("Timers", 20))
        self.lb.setStyleSheet("color:red;font-weight:bold")
        self.lb.move(120, 100)

        # 按钮1布局（“同意”按钮）
        self.btn1 = QPushButton('同意', self)
        self.btn1.setFont(QFont("Timers", 15))
        self.btn1.setStyleSheet("color:red;font-weight:bold")
        self.btn1.move(200, 200)
        self.btn1.clicked.connect(self.right)

        # 按钮2布局（“不同意”按钮）
        self.btn2 = QPushButton('不同意', self)
        self.btn2.setFont(QFont("Timers", 10))
        self.btn2.setStyleSheet("color:green;font-weight:bold")
        self.btn2.move(200, 300)
        self.btn2.clicked.connect(self.false)

        # 按钮2定义鼠标事件
        self.btn2.setMouseTracking(True)
        self.btn2.installEventFilter(self)

        # 窗体布局
        self.setWindowTitle("表白墙")
        self.resize(500, 500)
        self.show()

    # 关闭窗口时触发事件
    def closeEvent(self, event):
        # 弹出对话框
        reply = QMessageBox.question(self, '往哪跑？', "你跑的了么？", QMessageBox.Yes | QMessageBox.No, QMessageBox.No)

        # 对返回的选项进行操作
        if reply == QMessageBox.Yes:
            QMessageBox.warning(self, "别跑了", "你注定是我的 (≖ ‿ ≖)✧")
        else:
            QMessageBox.warning(self, "明智", "不跑就对了嘛 (≖ ‿ ≖)✧")
        event.ignore()

    # 点击按钮“同意时”触发的事件
    def right(self):
        QMessageBox.information(self, '这就对了嘛', "早这么爽快不就好了么，谁让我这么喜欢你呢 (≖ ‿ ≖)✧")
        sys.exit()

    # 点击按钮“不同意”时触发的事件
    def false(self):
        QMessageBox.information(self, '可以嘛', "手速不错，我喜欢！不过你还是跑不的，你注定是我的 (≖ ‿ ≖)✧")

    # 定义鼠标指向按钮2的事件
    def eventFilter(self, object, event):
        if object == self.btn2:
            if event.type() == QEvent.Enter:
                self.doMove()
        return QWidget.eventFilter(self, object, event)

    # 当鼠标移动到按钮2控件时的事件（动画）
    def doMove(self):
        global x, y
        if self.btn2.pos() == QPoint(200, 300):
            self.anim = QPropertyAnimation(self.btn2, b"geometry")
            self.anim.setDuration(200)
            self.anim.setStartValue(QRect(200, 300, 70, 20))
            x = random.randint(40, 460)
            y = random.randint(30, 480)
            self.anim.setEndValue(QRect(x, y, 50, 20))
            self.anim.setEasingCurve(QEasingCurve.OutCubic)
            self.anim.start()
        elif self.btn2.pos() == QPoint(x, y):
            self.anim = QPropertyAnimation(self.btn2, b"geometry")
            self.anim.setDuration(200)
            self.anim.setStartValue(QRect(x, y, 50, 20))
            x = random.randint(40, 460)
            y = random.randint(30, 480)
            self.anim.setEndValue(QRect(x, y, 50, 20))
            self.anim.setEasingCurve(QEasingCurve.OutCubic)
            self.anim.start()


# 主函数
if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = Example()
    sys.exit(app.exec_())